<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://stefaniezhao77.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://stefaniezhao77.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-03-24T09:11:33+00:00</updated><id>https://stefaniezhao77.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">No planning, no execution — How to plan a perfect week</title><link href="https://stefaniezhao77.github.io/blog/2025/no-planning-no-executionhow-to-plan-a-perfect-week/" rel="alternate" type="text/html" title="No planning, no execution — How to plan a perfect week"/><published>2025-03-23T10:26:54+00:00</published><updated>2025-03-23T10:26:54+00:00</updated><id>https://stefaniezhao77.github.io/blog/2025/no-planning-no-executionhow-to-plan-a-perfect-week</id><content type="html" xml:base="https://stefaniezhao77.github.io/blog/2025/no-planning-no-executionhow-to-plan-a-perfect-week/"><![CDATA[<h3><strong>No planning, no execution — How to plan a perfect week</strong></h3> <p>Without a plan, life can slip into a foggy haze. I often find myself caught in this trap: busy all day, yet unsure what I’ve actually accomplished. When I finally get a moment to rest, I turn to social media, only to be overwhelmed by a flood of random updates — my mood shifts, my mind fills with clutter, and I end up more tired than before. Rest doesn’t feel restorative, and even after a weekend, I’m still running on empty, stuck in a loop. After exploring some books on energy management and how our minds work, I’ve learned we don’t need an overloaded schedule to change this. With just a few small, intentional adjustments — using bits of spare time — we can make our weeks feel meaningful, lift ourselves up, and give our brains a real chance to recharge.</p> <h3>1. A Daily 25-Minute Learning Block</h3> <p>Outside of work or studies, you don’t need hours — just one focused stretch, like a 25-minute Pomodoro, to explore something you’re drawn to. It’s not about assignments or job demands; it could be practicing a few phrases in a new language, reading a page or two, or diving into topics like sociology or economics — whatever lights you up. For those of us juggling busy days, where time gets sliced into fragments, this dedicated slot keeps your mind engaged. It’s also a refreshing shift in focus.</p> <h3>2. A Few Minutes for a Tiny Habit</h3> <p>Building habits is all about consistency, so start small instead of aiming big right away. Try 3 minutes of meditation, 10 minutes on guitar playing, or a 1-kilometer walk — then gently build from there. These small steps lower the hurdle to begin, and the longer you stick with it, the more you start to trust yourself, quietly boosting your confidence.</p> <h3>3. A Weekly Creative Moment</h3> <p>Each week, carve out some time to play with creativity — write a short piece, craft something by hand, sketch a drawing, or even try a new twist on a game (the “new” is key). It pulls you out of the daily slog, stirs your imagination, and lifts your spirits in a subtle way.</p> <h3>4. Time with People</h3> <p>We’re built to connect — it’s part of being human. Set aside a moment each week to catch up with old friends, meet someone new for a fresh surprise, or sit with family and talk. These real, heartfelt exchanges ease tension, offer comfort, and anchor you in the present.</p> <h3>5. Quiet Time Alone</h3> <p>Our world is noisy — voices from people nearby, online, even strangers, piling info into our heads every day. Add in the scattered thoughts and endless to-dos, and it’s a lot. That’s why we need to make space each week for solitude. It might be a walk, a few minutes staring out the window, or a chance to sift through the week’s chaos — keeping what matters, letting go of the rest.</p> <blockquote>Take It Slow, Let It Build</blockquote> <p>You might wonder, “How do I find the time?” But here’s the truth: these changes are small. No hour to spare? Try 30 minutes, 10, or even 5 — it all counts. The point isn’t to overhaul everything at once; it’s about taking that first step, giving yourself room to breathe and adjust. Don’t push for instant results or feel down if you miss a day. Perfection isn’t the goal — small, steady moves are. Start where you are, go at your pace, and time will show you what’s possible.</p> <p><img src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=041e9b1698b2" width="1" height="1" alt=""/></p>]]></content><author><name></name></author></entry><entry><title type="html">Beyond the Code: The Design of the ID Anonymization Tool</title><link href="https://stefaniezhao77.github.io/blog/2025/id-anonymization-tool/" rel="alternate" type="text/html" title="Beyond the Code: The Design of the ID Anonymization Tool"/><published>2025-02-10T00:00:00+00:00</published><updated>2025-02-10T00:00:00+00:00</updated><id>https://stefaniezhao77.github.io/blog/2025/id-anonymization-tool</id><content type="html" xml:base="https://stefaniezhao77.github.io/blog/2025/id-anonymization-tool/"><![CDATA[<h2 id="the-why-a-need-for-responsible-data-handling">The “Why”: A Need for Responsible Data Handling</h2> <p>In a world increasingly driven by data, the need for responsible data handling has never been greater. I built this open-source ID anonymization tool not just as a technical exercise, but as a response to a growing ethical imperative: to protect individual privacy while still enabling valuable data analysis. Whether it’s in medical research, social science, or any field dealing with sensitive information, the ability to anonymize data effectively is crucial for maintaining public trust and complying with regulations like GDPR and HIPAA. This project is our contribution to that effort.</p> <h2 id="design-philosophy-balancing-privacy-integrity-and-usability">Design Philosophy: Balancing Privacy, Integrity, and Usability</h2> <p>From the outset, our design philosophy was guided by three core principles:</p> <ol> <li><strong>Privacy by Design:</strong> I wanted to build a tool that prioritized privacy from the ground up, not as an afterthought. This meant choosing strong cryptographic methods and ensuring that the anonymization process was irreversible.</li> <li><strong>Data Integrity:</strong> It was essential that the anonymization process did not compromise the integrity of the data itself. Researchers and analysts need to be able to trust that the underlying data remains accurate and reliable.</li> <li><strong>Usability:</strong> I aimed for a tool that was accessible to a wide range of users, not just those with deep technical expertise. This led to the development of both a graphical user interface (GUI) and a command-line interface (CLI).</li> </ol> <h2 id="anonymization-vs-utility-navigating-the-trade-offs">Anonymization vs. Utility: Navigating the Trade-offs</h2> <p>One of the central challenges in data anonymization is the inherent trade-off betIen anonymization strength and data utility. Perfect anonymization (e.g., simply deleting all identifying information) would render the data useless for most analytical purposes. Conversely, Iak anonymization (e.g., simply replacing names with pseudonyms) leaves the data vulnerable to re-identification attacks.</p> <p>I chose to use SHA-256 hashing (implemented in the <code class="language-plaintext highlighter-rouge">hash_id</code> function, lines 51-69 of <code class="language-plaintext highlighter-rouge">id_processor.py</code>) as a strong anonymization technique. SHA-256 provides a high level of security, making it computationally infeasible to reverse the hashing process. HoIver, I also recognized the need to preserve relationships <em>betIen</em> data points. This is why I implemented the mapping file concept (handled by the <code class="language-plaintext highlighter-rouge">create_id_mapping</code> function, lines 114-135 of <code class="language-plaintext highlighter-rouge">id_processor.py</code>). This allows users to define how different IDs relate to each other, ensuring that, for example, all records belonging to the same patient are linked to the same anonymized ID, even across different files.</p> <h2 id="challenges-and-solutions-a-developers-journey">Challenges and Solutions: A Developer’s Journey</h2> <p>The development process wasn’t without its hurdles. One significant challenge was ensuring data integrity and preventing file corruption, especially in the event of unexpected interruptions. I addressed this through a combination of techniques:</p> <ul> <li><strong>Automatic Backups:</strong> Before any file is modified, a backup is created (lines 249-254 of <code class="language-plaintext highlighter-rouge">id_processor.py</code>). This provides a simple but effective way to recover the original data if something goes wrong.</li> <li><strong>Temporary Files and Atomic Renames:</strong> The <code class="language-plaintext highlighter-rouge">update_file_ids</code> function (lines 137-226 of <code class="language-plaintext highlighter-rouge">id_processor.py</code>) uses a temporary file to store the updated data. Only after the entire file is successfully written is the original file replaced with the temporary file using an atomic rename operation. This minimizes the risk of data corruption.</li> <li><strong>Retry Logic:</strong> I also incorporated retry logic (lines 190-209 of <code class="language-plaintext highlighter-rouge">id_processor.py</code>) to handle situations where the file might be temporarily locked by another process.</li> </ul> <p>Another challenge was handling potentially malformed or inconsistent input data. The <code class="language-plaintext highlighter-rouge">read_file</code> function (lines 70-84 of <code class="language-plaintext highlighter-rouge">id_processor.py</code>) includes error handling to gracefully manage various file formats and potential issues. I also added checks to ensure that the mapping file itself is valid and contains the required columns (lines 289-291 of <code class="language-plaintext highlighter-rouge">id_processor.py</code>).</p>]]></content><author><name></name></author><category term="Tools"/><category term="python"/><category term="data-anonymization"/><summary type="html"><![CDATA[The “Why”: A Need for Responsible Data Handling]]></summary></entry></feed>